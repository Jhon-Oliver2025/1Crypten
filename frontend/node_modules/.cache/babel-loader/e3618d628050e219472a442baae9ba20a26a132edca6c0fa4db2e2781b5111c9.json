{"ast":null,"code":"import axios from 'axios';\nexport const getSignals = async () => {\n  try {\n    const response = await axios.get('http://localhost:5001/sinais_lista.csv', {\n      headers: {\n        'Content-Type': 'text/csv'\n      }\n    });\n    const lines = response.data.split('\\n');\n    const headers = lines[0].split(',');\n    const signals = lines.slice(1).filter(line => line.trim()).map(line => {\n      const values = line.split(',');\n      return {\n        symbol: values[0],\n        type: values[1],\n        entry_price: parseFloat(values[2]),\n        entry_time: values[3],\n        target_price: parseFloat(values[4]),\n        target_exit_time: values[5],\n        status: values[6],\n        quality_score: parseFloat(values[10]),\n        signal_class: values[11],\n        strategy_info: values[15]\n      };\n    });\n    return signals;\n  } catch (error) {\n    console.error('Erro ao buscar sinais:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","getSignals","response","get","headers","lines","data","split","signals","slice","filter","line","trim","map","values","symbol","type","entry_price","parseFloat","entry_time","target_price","target_exit_time","status","quality_score","signal_class","strategy_info","error","console"],"sources":["C:/Users/spcom/Desktop/Sistema7.2.1/frontend/src/services/signalsService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const getSignals = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:5001/sinais_lista.csv', {\r\n      headers: {\r\n        'Content-Type': 'text/csv'\r\n      }\r\n    });\r\n    \r\n    const lines = response.data.split('\\n');\r\n    const headers = lines[0].split(',');\r\n    const signals = lines.slice(1)\r\n      .filter(line => line.trim())\r\n      .map(line => {\r\n        const values = line.split(',');\r\n        return {\r\n          symbol: values[0],\r\n          type: values[1],\r\n          entry_price: parseFloat(values[2]),\r\n          entry_time: values[3],\r\n          target_price: parseFloat(values[4]),\r\n          target_exit_time: values[5],\r\n          status: values[6],\r\n          quality_score: parseFloat(values[10]),\r\n          signal_class: values[11],\r\n          strategy_info: values[15]\r\n        };\r\n      });\r\n\r\n    return signals;\r\n  } catch (error) {\r\n    console.error('Erro ao buscar sinais:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,wCAAwC,EAAE;MACzEC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC;IACvC,MAAMH,OAAO,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;IACnC,MAAMC,OAAO,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC,CAC3BC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BC,GAAG,CAACF,IAAI,IAAI;MACX,MAAMG,MAAM,GAAGH,IAAI,CAACJ,KAAK,CAAC,GAAG,CAAC;MAC9B,OAAO;QACLQ,MAAM,EAAED,MAAM,CAAC,CAAC,CAAC;QACjBE,IAAI,EAAEF,MAAM,CAAC,CAAC,CAAC;QACfG,WAAW,EAAEC,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;QAClCK,UAAU,EAAEL,MAAM,CAAC,CAAC,CAAC;QACrBM,YAAY,EAAEF,UAAU,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;QACnCO,gBAAgB,EAAEP,MAAM,CAAC,CAAC,CAAC;QAC3BQ,MAAM,EAAER,MAAM,CAAC,CAAC,CAAC;QACjBS,aAAa,EAAEL,UAAU,CAACJ,MAAM,CAAC,EAAE,CAAC,CAAC;QACrCU,YAAY,EAAEV,MAAM,CAAC,EAAE,CAAC;QACxBW,aAAa,EAAEX,MAAM,CAAC,EAAE;MAC1B,CAAC;IACH,CAAC,CAAC;IAEJ,OAAON,OAAO;EAChB,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}