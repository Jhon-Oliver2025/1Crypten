{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Interceptor para adicionar o token em todas as requisições\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const login = async ({\n  username,\n  password\n}) => {\n  try {\n    // Simulando uma chamada de API com as credenciais fixas\n    if (username === 'admin' && password === '311101') {\n      const response = {\n        data: {\n          user: {\n            username: 'admin',\n            name: 'Administrador'\n          },\n          access_token: 'fake-jwt-token'\n        }\n      };\n      localStorage.setItem('token', response.data.access_token);\n      return response;\n    } else {\n      throw {\n        response: {\n          data: {\n            error: 'Usuário ou senha inválidos'\n          }\n        }\n      };\n    }\n  } catch (error) {\n    console.error('Erro no login:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","login","username","password","response","data","user","name","access_token","setItem","error","console"],"sources":["C:/Users/spcom/Desktop/Sistema7.2.1/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api'\r\n});\r\n\r\n// Interceptor para adicionar o token em todas as requisições\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const login = async ({ username, password }) => {\r\n  try {\r\n    // Simulando uma chamada de API com as credenciais fixas\r\n    if (username === 'admin' && password === '311101') {\r\n      const response = {\r\n        data: {\r\n          user: {\r\n            username: 'admin',\r\n            name: 'Administrador'\r\n          },\r\n          access_token: 'fake-jwt-token'\r\n        }\r\n      };\r\n      \r\n      localStorage.setItem('token', response.data.access_token);\r\n      return response;\r\n    } else {\r\n      throw {\r\n        response: {\r\n          data: {\r\n            error: 'Usuário ou senha inválidos'\r\n          }\r\n        }\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error('Erro no login:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,KAAK,GAAG,MAAAA,CAAO;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACrD,IAAI;IACF;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,QAAQ,EAAE;MACjD,MAAMC,QAAQ,GAAG;QACfC,IAAI,EAAE;UACJC,IAAI,EAAE;YACJJ,QAAQ,EAAE,OAAO;YACjBK,IAAI,EAAE;UACR,CAAC;UACDC,YAAY,EAAE;QAChB;MACF,CAAC;MAEDX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACC,IAAI,CAACG,YAAY,CAAC;MACzD,OAAOJ,QAAQ;IACjB,CAAC,MAAM;MACL,MAAM;QACJA,QAAQ,EAAE;UACRC,IAAI,EAAE;YACJK,KAAK,EAAE;UACT;QACF;MACF,CAAC;IACH;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAerB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}